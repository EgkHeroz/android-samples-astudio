image: javiersantos/android-ci:28.0.3

variables:
  # workaround self-signed certificate 
  GIT_SSL_NO_VERIFY: "1"

before_script:
  # temporarily disable checking for EPIPE error
  # use yes to accept all Android SDK licenses    
  - set +o pipefail
  - yes | /sdk/tools/bin/sdkmanager --licenses
  - set -o pipefail

  # setup gradle
  - export GRADLE_USER_HOME=`pwd`/Java/DecodeListener/.gradle
  - chmod +x ./Java/DecodeListener/gradlew

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
     - .gradle/

stages:
  - buildA
  - setB
  - buildB
  - test

lintRelease:
  stage: buildA
  script:
    - cd Java; cd DecodeListener; ./gradlew -Pci --console=plain :app:lintRelease
  artifacts:
    paths:
    - Java/DecodeListener/app/build/reports/

assembleRelease:
  stage: buildA
  script:
    - cd Java; cd DecodeListener; ./gradlew assembleRelease -PversionCode=${CI_JOB_ID}
  artifacts:
    paths:
    - Java/DecodeListener/app/build/outputs/

pre_script2:
 stage: setB
 script:
  # temporarily disable checking for EPIPE error
  # use yes to accept all Android SDK licenses    
  - set +o pipefail
  - yes | /sdk/tools/bin/sdkmanager --licenses
  - set -o pipefail

  # setup gradle
  - export GRADLE_USER_HOME=`pwd`/Java/DecodeIntent/.gradle
  - chmod +x ./Java/DecodeIntent/gradlew

lintReleaseB:
  stage: buildB
  script:
    - cd Java; cd DecodeIntent; ./gradlew -Pci --console=plain :app:lintRelease
  artifacts:
    paths:
    - Java/DecodeIntent/app/build/reports/

assembleReleaseB:
  stage: buildB
  script:
    - cd Java; cd DecodeIntent; ./gradlew assembleRelease -PversionCode=${CI_JOB_ID}
  artifacts:
    paths:
    - Java/DecodeIntent/app/build/outputs/

releaseTests:
  stage: test
  script:
    - cd Java; cd DecodeListener; ./gradlew -Pci --console=plain :app:testRelease
  artifacts:
    paths:
    - Java/DecodeListener/app/build/reports/tests/